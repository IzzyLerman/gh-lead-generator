name: Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy-functions:
    runs-on: ubuntu-latest
    environment: production

    steps:
    - uses: actions/checkout@v4

    - name: Setup Supabase CLI
      uses: supabase/setup-cli@v1
      with:
        version: latest

    - name: Apply database migrations
      env:
        SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
        SUPABASE_PROJECT_ID: ${{ secrets.SUPABASE_PROJECT_ID }}
      run: supabase db push --project-ref $SUPABASE_PROJECT_ID

    - name: Deploy to Supabase
      env:
        SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
        SUPABASE_PROJECT_ID: ${{ secrets.SUPABASE_PROJECT_ID }}
      run: |
        supabase functions deploy receive-email --project-ref $SUPABASE_PROJECT_ID
        supabase functions deploy worker --project-ref $SUPABASE_PROJECT_ID
        supabase functions deploy find-contacts --project-ref $SUPABASE_PROJECT_ID

    - name: Run post-deployment health checks
      env:
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
      run: |
        # Basic health check for receive-email function
        curl -f "$SUPABASE_URL/functions/v1/receive-email" \
          -H "Authorization: Bearer $SUPABASE_SERVICE_ROLE_KEY" \
          -X POST \
          -d '{}' || echo "Health check failed - function may need warmup"

    - name: Notify deployment status
      if: always()
      run: |
        if [ ${{ job.status }} == 'success' ]; then
          echo "✅ Deployment successful"
        else
          echo "❌ Deployment failed"
          exit 1
        fi