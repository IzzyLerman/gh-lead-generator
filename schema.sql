--Metadata to go along with the vehicle imgs in the data store
CREATE TABLE public."vehicle-photos" (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name TEXT UNIQUE, -- file name from storage
  status TEXT DEFAULT 'unprocessed', 
  created_at TIMESTAMPTZ DEFAULT NOW()
);

--Create metadata entry upon inserting to vehicle img store
CREATE OR REPLACE FUNCTION public.insertimg()
RETURNS trigger
LANGUAGE plpgsql
SECURITY INVOKER
SET search_path = public, pg_catalog AS $$
begin
  INSERT INTO public."vehicle-photos" (name)
  VALUES (NEW.name);
  RETURN NEW;
END;
$$;

--Register insertimg() to fire when object is inserted
CREATE TRIGGER on_new_image
AFTER INSERT ON storage.objects
FOR EACH ROW
WHEN (NEW.bucket_id = 'gh-vehicle-photos') 
EXECUTE PROCEDURE public.insertimg();

-- Enable and create pgmq
CREATE extension IF NOT EXISTS pgmq CASCADE;
SELECT pgmq.create('image-processing');
